#include <input/processors.dtsi>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/input_transform.h>

&trackball_listener {
    input-processors = <
        &zip_xy_scaler 5 2
    >;

    scroller {
        layers = <3>;

        input-processors = <
            &zip_xy_to_scroll_mapper
            &zip_scroll_scaler 1 10
            &zip_scroll_transform INPUT_TRANSFORM_Y_INVERT
        >;
    };
};

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W             &kp E             &kp R            &kp T                                            &kp Y        &kp U  &kp I      &kp O    &kp P
&lt 3 A         &kp S             &kp D             &kp F            &kp G        &msc MOVE_Y(20)      &kp SEMI       &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_GUI Z  &kp X             &kp C             &kp V            &kp B        &kp TAB              &kp SLASH      &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT EQUAL
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &lt 2 LC(SPACE)  &lt 1 SPACE  &lt 5 ESCAPE         &kp BACKSPACE  &lt 1 ENTER                             &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4    &kp F5                                 &trans            &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&kp F6  &kp F7  &kp F8  &kp F9    &kp F10   &trans      &msc SCRL_RIGHT  &msc MOVE_Y(-20)  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&kp A   &trans  &trans  &mkp MB4  &mkp MB5  &trans      &msc SCRL_LEFT   &msc MOVE_Y(20)   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans  &trans  &trans  &trans    &trans    &trans      &kp NUMBER_0     &kp DOT                                                     &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &kp DOUBLE_QUOTES  &trans  &trans  &kp LEFT_PARENTHESIS                          &kp RPAR           &kp LG(LEFT_ARROW)  &kp UP_ARROW    &kp LG(RIGHT_ARROW)  &trans
&trans  &trans             &trans  &trans  &kp LEFT_BRACE        &trans      &trans      &kp RIGHT_BRACE    &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp PLUS
&trans  &trans             &trans  &trans  &kp LEFT_BRACKET      &trans      &trans      &kp RIGHT_BRACKET  &trans              &trans          &trans               &kp ASTERISK
&trans  &trans             &trans  &trans  &trans                &trans      &kp DELETE  &trans                                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &kp LS(LC(UP_ARROW))                                                  &kp LS(LC(Y))      &kp LS(LC(U))  &kp LS(LC(I))      &kp LS(LC(O))       &trans
&trans  &trans  &trans  &trans  &trans                &trans                   &trans                 &kp LS(LC(H))      &kp LS(LC(J))  &kp LS(LC(K))      &kp LS(LC(L))       &kp LS(LC(MINUS))
&trans  &trans  &trans  &trans  &kp LC(LEFT_ARROW)    &kp LC(RIGHT_ARROW)      &trans                 &kp LS(LC(N))      &kp LS(LC(M))  &kp LS(LC(COMMA))  &kp LS(LC(PERIOD))  &trans
&trans  &trans  &trans  &trans  &trans                &trans                   &kp LS(LC(BACKSPACE))  &kp LS(LC(ENTER))                                                        &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
